An AngularJS module defines an application.

The module is a container for the different parts of an application.

The module is a container for the application controllers.

Controllers always belong to a module.

Creating a Module
A module is created by using the AngularJS function angular.module

<div ng-app="myApp">...</div>

<script>

var app = angular.module("myApp", []); 

</script>
The "myApp" parameter refers to an HTML element in which the application will run.

Now you can add controllers, directives, filters, and more, to your AngularJS application.

Modules and Controllers in Files
It is common in AngularJS applications to put the module and the controllers in JavaScript files.

In Given example, "myApp.js" contains an application module definition, while "myCtrl.js" contains the controller



Functions can Pollute the Global Namespace
------------------------------------------
Global functions should be avoided in JavaScript. They can easily be overwritten or destroyed by other scripts.

AngularJS modules reduces this problem, by keeping all functions local to the module.

When to Load the Library
------------------------
While it is common in HTML applications to place scripts at the end of the <body> element, it is recommended that you load the AngularJS library either in the <head> or at the start of the <body>.

This is because calls to angular.module can only be compiled after the library has been loaded.


angular.module syntax
---------------------
angular.module(name, [requires], [configFn]);

name
type - string	
The name of the module to create or retrieve.

requires
(optional)
type - !Array.<string>=	
If specified then new module is being created. If unspecified then the module is being retrieved for further configuration.

configFn
(optional)
type - Function=	
Optional configuration function for the module. Same as Module#config().

The [] parameter in the module definition can be used to define dependent modules.

Without the [] parameter, you are not creating a new module, but retrieving an existing one.


